// Copyright 2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: example/weather/v1/weather.proto

package weatherv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Condition int32

const (
	Condition_CONDITION_UNSPECIFIED Condition = 0
	Condition_CONDITION_SUNNY       Condition = 1
	Condition_CONDITION_RAINY       Condition = 2
	Condition_CONDITION_OVERCAST    Condition = 3
)

// Enum value maps for Condition.
var (
	Condition_name = map[int32]string{
		0: "CONDITION_UNSPECIFIED",
		1: "CONDITION_SUNNY",
		2: "CONDITION_RAINY",
		3: "CONDITION_OVERCAST",
	}
	Condition_value = map[string]int32{
		"CONDITION_UNSPECIFIED": 0,
		"CONDITION_SUNNY":       1,
		"CONDITION_RAINY":       2,
		"CONDITION_OVERCAST":    3,
	}
)

func (x Condition) Enum() *Condition {
	p := new(Condition)
	*p = x
	return p
}

func (x Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_example_weather_v1_weather_proto_enumTypes[0].Descriptor()
}

func (Condition) Type() protoreflect.EnumType {
	return &file_example_weather_v1_weather_proto_enumTypes[0]
}

func (x Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition.Descriptor instead.
func (Condition) EnumDescriptor() ([]byte, []int) {
	return file_example_weather_v1_weather_proto_rawDescGZIP(), []int{0}
}

type StationReport struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Station string                 `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty"`
	// Station frequency in MHz.
	Frequency     float32   `protobuf:"fixed32,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Temperature   float32   `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Pressure      float32   `protobuf:"fixed32,4,opt,name=pressure,proto3" json:"pressure,omitempty"`
	WindSpeed     float32   `protobuf:"fixed32,5,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	Conditions    Condition `protobuf:"varint,6,opt,name=conditions,proto3,enum=example.weather.v1.Condition" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationReport) Reset() {
	*x = StationReport{}
	mi := &file_example_weather_v1_weather_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationReport) ProtoMessage() {}

func (x *StationReport) ProtoReflect() protoreflect.Message {
	mi := &file_example_weather_v1_weather_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationReport.ProtoReflect.Descriptor instead.
func (*StationReport) Descriptor() ([]byte, []int) {
	return file_example_weather_v1_weather_proto_rawDescGZIP(), []int{0}
}

func (x *StationReport) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *StationReport) GetFrequency() float32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *StationReport) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *StationReport) GetPressure() float32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *StationReport) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *StationReport) GetConditions() Condition {
	if x != nil {
		return x.Conditions
	}
	return Condition_CONDITION_UNSPECIFIED
}

type WeatherReport struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Region          string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	WeatherStations []*StationReport       `protobuf:"bytes,2,rep,name=weather_stations,json=weatherStations,proto3" json:"weather_stations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WeatherReport) Reset() {
	*x = WeatherReport{}
	mi := &file_example_weather_v1_weather_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherReport) ProtoMessage() {}

func (x *WeatherReport) ProtoReflect() protoreflect.Message {
	mi := &file_example_weather_v1_weather_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherReport.ProtoReflect.Descriptor instead.
func (*WeatherReport) Descriptor() ([]byte, []int) {
	return file_example_weather_v1_weather_proto_rawDescGZIP(), []int{1}
}

func (x *WeatherReport) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *WeatherReport) GetWeatherStations() []*StationReport {
	if x != nil {
		return x.WeatherStations
	}
	return nil
}

var File_example_weather_v1_weather_proto protoreflect.FileDescriptor

const file_example_weather_v1_weather_proto_rawDesc = "" +
	"\n" +
	" example/weather/v1/weather.proto\x12\x12example.weather.v1\x1a\x1bbuf/validate/validate.proto\"\x9f\x02\n" +
	"\rStationReport\x128\n" +
	"\astation\x18\x01 \x01(\tB\x1e\xbaH\x1b\xc8\x01\x01r\x162\x14[KW][A-Z]{2}[0-9]{2}R\astation\x120\n" +
	"\tfrequency\x18\x02 \x01(\x02B\x12\xbaH\x0f\xc8\x01\x01\n" +
	"\n" +
	"\x1dÍŒ\"C-ff\"CR\tfrequency\x12 \n" +
	"\vtemperature\x18\x03 \x01(\x02R\vtemperature\x12\x1a\n" +
	"\bpressure\x18\x04 \x01(\x02R\bpressure\x12\x1d\n" +
	"\n" +
	"wind_speed\x18\x05 \x01(\x02R\twindSpeed\x12E\n" +
	"\n" +
	"conditions\x18\x06 \x01(\x0e2\x1d.example.weather.v1.ConditionB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"conditions\"}\n" +
	"\rWeatherReport\x12\x1e\n" +
	"\x06region\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06region\x12L\n" +
	"\x10weather_stations\x18\x02 \x03(\v2!.example.weather.v1.StationReportR\x0fweatherStations*h\n" +
	"\tCondition\x12\x19\n" +
	"\x15CONDITION_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCONDITION_SUNNY\x10\x01\x12\x13\n" +
	"\x0fCONDITION_RAINY\x10\x02\x12\x16\n" +
	"\x12CONDITION_OVERCAST\x10\x03B\xd0\x01\n" +
	"\x16com.example.weather.v1B\fWeatherProtoP\x01Z>buf.build/go/hyperpb/internal/gen/example/weather/v1;weatherv1\xa2\x02\x03EWX\xaa\x02\x12Example.Weather.V1\xca\x02\x12Example\\Weather\\V1\xe2\x02\x1eExample\\Weather\\V1\\GPBMetadata\xea\x02\x14Example::Weather::V1b\x06proto3"

var (
	file_example_weather_v1_weather_proto_rawDescOnce sync.Once
	file_example_weather_v1_weather_proto_rawDescData []byte
)

func file_example_weather_v1_weather_proto_rawDescGZIP() []byte {
	file_example_weather_v1_weather_proto_rawDescOnce.Do(func() {
		file_example_weather_v1_weather_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_example_weather_v1_weather_proto_rawDesc), len(file_example_weather_v1_weather_proto_rawDesc)))
	})
	return file_example_weather_v1_weather_proto_rawDescData
}

var file_example_weather_v1_weather_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_example_weather_v1_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_example_weather_v1_weather_proto_goTypes = []any{
	(Condition)(0),        // 0: example.weather.v1.Condition
	(*StationReport)(nil), // 1: example.weather.v1.StationReport
	(*WeatherReport)(nil), // 2: example.weather.v1.WeatherReport
}
var file_example_weather_v1_weather_proto_depIdxs = []int32{
	0, // 0: example.weather.v1.StationReport.conditions:type_name -> example.weather.v1.Condition
	1, // 1: example.weather.v1.WeatherReport.weather_stations:type_name -> example.weather.v1.StationReport
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_example_weather_v1_weather_proto_init() }
func file_example_weather_v1_weather_proto_init() {
	if File_example_weather_v1_weather_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_example_weather_v1_weather_proto_rawDesc), len(file_example_weather_v1_weather_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_example_weather_v1_weather_proto_goTypes,
		DependencyIndexes: file_example_weather_v1_weather_proto_depIdxs,
		EnumInfos:         file_example_weather_v1_weather_proto_enumTypes,
		MessageInfos:      file_example_weather_v1_weather_proto_msgTypes,
	}.Build()
	File_example_weather_v1_weather_proto = out.File
	file_example_weather_v1_weather_proto_goTypes = nil
	file_example_weather_v1_weather_proto_depIdxs = nil
}
